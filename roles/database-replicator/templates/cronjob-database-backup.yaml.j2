---
kind: CronJob
apiVersion: batch/v1beta1
metadata:
  name: postgres-replicator-backup
  namespace: {{ stack_namespace_fact }}
spec:
  schedule: '{{ replicator_schedule }}'
  successfulJobsHistoryLimit: 1
  startingDeadlineSeconds: 180
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            name: postgres-replicator-backup
        spec:
          serviceAccountName: stack

          # A 'preferred' (not guaranteed)
          # node selection affinity...
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                  - key: purpose
                    operator: In
                    values:
                    - {{ replicator_node_purpose }}

{% if all_image_preset_pullsecret_name|string|length > 0 %}
          imagePullSecrets:
          - name: {{ all_image_preset_pullsecret_name }}
{% endif %}

          containers:
          - image: informaticsmatters/sql-backup:{{ replicator_image_tag }}
            name: postgres-replicator-backup
            imagePullPolicy: IfNotPresent
            terminationMessagePolicy: FallbackToLogsOnError
            resources:
              limits:
                cpu: 1000m
                memory: 2Gi
              requests:
                cpu: 100m
                memory: 128Mi
            env:
            - name: BACKUP_TYPE
              value: hourly
            - name: BACKUP_COUNT
              value: '2'
            - name: DATABASE
              value: frag
            - name: PGHOST
              value: database
            - name: PGUSER
              value: admin
            - name: PGADMINPASS
              valueFrom:
                secretKeyRef:
                  name: database
                  key: root_password
            volumeMounts:
            - name: destination
              mountPath: /backup

          volumes:
          - name: destination
            nfs:
              server: {{ replicator_nfs_server }}
              path: {{ replicator_nfs_path }}
          restartPolicy: Never
