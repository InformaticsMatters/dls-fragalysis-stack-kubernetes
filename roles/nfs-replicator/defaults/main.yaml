---

# The nfs-replicator provides the ability to replicate files from one volume
# to another, where one volume is for a PVC in one cluster and the other a
# static volume available to other clusters. So data can be replicated out of
# one cluster (onto the static volume) and into another (from the static
# volume).
#
# In this role the static volume is mounted into the Pod as 'volume-a'
# and the (dynamic) PVC as 'volume-b'. The replicator then accepts
# a 'REPLICATE_DIRECTION' environment variable that is either
# 'AtoB' or 'BtoA'.
#
# The replica Pod employs 'rsync' where '--delete' is used to ensure
# the destination is a copy of the source (with extraneous files removed).
# This can be controlled by the 'REPLICATE_DELETE' Pod environment variable.
#
# We provide Job and CronJob templates - for single-shot and
# recurring replication where the default role behaviour (i.e. via main)
# id to run a 'single-shot' replication.

# Set one of 'developer stack name' (typically 'default')
# or 'production stack namespace'.
#
# The direction replica direction is based on which variable is set.
# If 'stack_name' is used the direction will be 'AtoB',
# otherwise it's 'BtoA'
replicator_stack_name: ''
replicator_stack_ns: ''

# Details of the statically assigned replica volume (on an NFS server)
# (volume-a)
replicator_a_nfs_server: SetMe
replicator_a_nfs_path: SetMe
# Details of the PVC to copy from or copy into (based on direction)
# (volume-b). Typically 'media' for a stack.
replicator_b_pvc_name: SetMe

# Run as a CronJob?
replicator_as_cronjob: no

# If 'replicator_as_cronjob' is 'yes' the playbook will use the following
# schedule in the 'ConJob' template - i.e. 21 minutes past each hour.
# Replication can take a significant time - so ensure you're not
# running this too often! Here we run at 40 minutes past each 'odd' hour.
replicator_schedule: '40 1,3,5,7,9,11,13,15,17,19,21,23 * * *'

# If 'replicator_as_cronjob' is 'no' the playbook will use this as the
# length of time to wait for the replicator 'Job' to complete.
# But expect replication of production media data (say around 4.5Gi)
# to take at least 10 minutes to complete over NFS.
replicator_job_timeout_minutes: 30
