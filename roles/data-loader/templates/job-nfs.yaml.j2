---

# Template for the 'mounted' Fragalysis Media Loader.
# A loader that expects the source data in a mounted volume
# declared as a s'static' export on an  on an NFS server.

apiVersion: batch/v1
kind: Job
metadata:
  name: nfs-loader
  namespace: {{ stack_namespace }}
spec:
  # Clean-up completed (or failed) Jobs
  # after 5 minutes...
  ttlSecondsAfterFinished: 300

  template:
    metadata:
      labels:
        name: nfs-loader
    spec:
      serviceAccountName: stack

      # A 'preferred' (not guaranteed)
      # node selection affinity...
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: purpose
                operator: In
                values:
                - {{ loader_node_purpose }}

{% if all_image_preset_pullsecret_name|string|length > 0 %}
      imagePullSecrets:
      - name: {{ all_image_preset_pullsecret_name }}
{% endif %}

      containers:
      - name: nfs-loader
        image: '{{ loader_nfs_image_registry }}/{{ loader_nfs_image }}:{{ loader_nfs_image_tag }}'
{% if loader_nfs_image_tag in ['latest', 'stable'] %}
        imagePullPolicy: Always
{% else %}
        imagePullPolicy: IfNotPresent
{% endif %}
        terminationMessagePolicy: FallbackToLogsOnError
        env:
        - name: DATA_ORIGIN
          value: '{{ loader_data_origin }}'
        # Database credentials
        - name: POSTGRESQL_DATABASE
          value: frag
        - name: POSTGRESQL_USER
          value: fragalysis
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database
              key: user_password
        - name: POSTGRESQL_HOST
          valueFrom:
            secretKeyRef:
              name: database
              key: host
        - name: POSTGRESQL_PORT
          valueFrom:
            secretKeyRef:
              name: database
              key: port
        volumeMounts:
        - name: mounted-media
          mountPath: /mounted-media
        - name: media
          mountPath: /code/media

      volumes:
      - name: mounted-media
        nfs:
          server: {{ loader_nfs_server }}
          path: {{ loader_nfs_path }}
      - name: media
        persistentVolumeClaim:
          claimName: media

      restartPolicy: Never
  backoffLimit: 1
