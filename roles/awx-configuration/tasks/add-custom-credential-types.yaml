---

# Custom credentials.
#
# Here we define our own custom credentials that _inject_ their content
# as _extra_vars_ into the corresponding Job Templates. They're used to
# provide a centralised store of variables that define our various
# OpenShift and Keycloak installations for playbooks that need them.

# Our Kubernetes credential type.
# For OpenShift and Kubernetes clusters.

- name: Add kubernetes credential type
  awx.awx.tower_credential_type:
    name: kubernetes
    description: Credentials for a Kubernetes/OpenShift cluster
    kind: cloud
    inputs:
      fields:
      - id: name
        type: string
        label: A symbolic name for the cluster
      - id: host
        type: string
        label: API host
      - id: api_key
        type: string
        label: API Key (Token)
        secret: true
      - id: verify_ssl
        type: boolean
        label: Verify SSL
      required:
      - name
      - host
      - api_key
      - verify_ssl
    injectors:
      env:
        K8S_AUTH_NAME: "{{ '{{' }} name {{ '}}' }}"
        K8S_AUTH_HOST: "{{ '{{' }} host {{ '}}' }}"
        K8S_AUTH_API_KEY: "{{ '{{' }} api_key {{ '}}' }}"
        K8S_AUTH_VERIFY_SSL: "{{ '{{' }} verify_ssl {{ '}}' }}"

# Our Keycloak credential type

- name: Add keycloak credential type
  awx.awx.tower_credential_type:
    name: keycloak
    description: Credentials for a Keycloak server
    kind: cloud
    inputs:
      fields:
      - id: hostname
        type: string
        label: Keyclaok hostname
      - id: admin
        type: string
        label: Admin username
      - id: admin_password
        type: string
        secret: yes
        label: Admin password
      - id: public_key
        type: string
        label: Public Key
      - id: secret_key
        type: string
        secret: yes
        label: Secret Key
      - id: realm
        type: string
        label: Application realm
      required:
      - hostname
      - admin
      - admin_password
      - public_key
      - secret_key
      - realm
    injectors:
      extra_vars:
        keycloak_server_url: "https://{{ '{{' }} hostname {{ '}}' }}/auth"
        keycloak_admin: "{{ '{{' }} admin {{ '}}' }}"
        keycloak_admin_password: "{{ '{{' }} admin_password {{ '}}' }}"
        keycloak_public_key: "{{ '{{' }} public_key {{ '}}' }}"
        keycloak_secret: "{{ '{{' }} secret_key {{ '}}' }}"
        keycloak_realm: "{{ '{{' }} realm {{ '}}' }}"

# Our neo4j credential type

- name: Add graph credential type
  awx.awx.tower_credential_type:
    name: graph
    description: Credentials for a graph server
    kind: cloud
    inputs:
      fields:
      - id: name
        type: string
        label: A symbolic name for the database
      - id: hostname
        type: string
        label: Hostname (of Bolt service)
      - id: password
        type: string
        secret: yes
        label: Password
      required:
      - hostname
      - password
    injectors:
      extra_vars:
        graph_name: "{{ '{{' }} name {{ '}}' }}"
        graph_hostname: "{{ '{{' }} hostname {{ '}}' }}"
        graph_password: "{{ '{{' }} password {{ '}}' }}"

# Our SMTP credential type

- name: Add smtp credential type
  awx.awx.tower_credential_type:
    name: smtp
    description: Credentials for an SMTP server
    kind: cloud
    inputs:
      fields:
      - id: server
        type: string
        label: Hostname
      - id: port
        type: string
        label: Port
      - id: user
        type: string
        secret: yes
        label: Username
      - id: password
        type: string
        secret: yes
        label: Password
      required:
      - server
      - port
      - user
      - password
    injectors:
      extra_vars:
        smtp_server: "{{ '{{' }} server {{ '}}' }}"
        smtp_port: "{{ '{{' }} port {{ '}}' }}"
        smtp_user: "{{ '{{' }} user {{ '}}' }}"
        smtp_password: "{{ '{{' }} password {{ '}}' }}"

# Our Fragnet (Search) credential type.
# Essentially the URL and a valid user.

- name: Add fragnet credential type
  awx.awx.tower_credential_type:
    name: fragnet
    description: Credentials for a fragenet server
    kind: cloud
    inputs:
      fields:
      - id: hostname
        type: string
        label: Hostname
      - id: username
        type: string
        secret: yes
        label: Username
      - id: password
        type: string
        secret: yes
        label: Password
      required:
      - hostname
      - user
      - password
    injectors:
      env:
        FRAGNET_HOSTNAME: "{{ '{{' }} hostname {{ '}}' }}"
        FRAGNET_USERNAME: "{{ '{{' }} username {{ '}}' }}"
        FRAGNET_PASSWORD: "{{ '{{' }} password {{ '}}' }}"

# Our Container Registry Container secret.
# A name and a base64 encoded JSON authentication string -
# the 'dockerconfig' content.
#
# Values injected as variables.

- name: Add registry credential type (Kubernetes)
  awx.awx.tower_credential_type:
    name: registry
    description: Kubernetes-style credentials for a Container Registry
    kind: cloud
    inputs:
      fields:
      - id: name
        type: string
        label: Name
        help_text: A name used to create and refer to the Kubernetes secret
      - id: secret
        type: string
        secret: yes
        label: Secret
        help_text: The base64 encoded authentication string
      required:
      - name
      - secret
    injectors:
      extra_vars:
        registry_secret_name: "{{ '{{' }} name {{ '}}' }}"
        registry_secret_secret: "{{ '{{' }} secret {{ '}}' }}"
