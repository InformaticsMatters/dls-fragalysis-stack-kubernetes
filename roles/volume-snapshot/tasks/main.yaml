---

# The user is expected to have attached a suitable OpenStack
# credential to the AWX Job so that the conventional
# authentication environment variables are defined.

# We expect OpenStack variables to be present in the file
# referred to by the environment variable 'OS_CLIENT_CONFIG_FILE'
# (injected by the corresponding AWX OpenStack credential): -
#
# clouds:
#   devstack:
#     auth:
#       auth_url: <auth-url>
#       domain_name: <domain>
#       password: <password>
#       project_name: <project-name>
#       username: <username>
#       verify: true

- name: Get config filename
  set_fact:
    config_file: "{{ lookup('env', 'OS_CLIENT_CONFIG_FILE') }}"

- name: Assert config filename is defined
  assert:
    that: config_file|string|length > 0

- name: Load variables from OpenStack config file
  include_vars: "{{ config_file }}"

- name: Diaplsy authentication
  debug:
    var: clouds.devstack.auth

# Iterate through the list of 'snapshot_volumes'
# and issue a snapshot request to OpenStack.

- name: Authenticate
  os_auth:
    auth:
      auth_url: "{{ clouds.devstack.auth.auth_url }}"
      username: "{{ clouds.devstack.auth.username }}"
      password: "{{ clouds.devstack.auth.password }}"
      project_name: "{{ clouds.devstack.auth.project_name }}"
    availability_zone: "{{ snapshot_az }}"
    timeout: 600
    validate_certs: no
    auth_type: password

- name: Display token
  debug:
    var: auth_token

- name: Display service catalogue
  debug:
    var: service_catalog

- name: Create volume snapshots
  os_volume_snapshot:
    force: yes
    volume: "{{ item.name }}"
    display_name: "{{ item.snapshot }}"
    display_description: "{{ ansible_date_time.iso8601 }}"
    availability_zone: "{{ snapshot_az }}"
    timeout: 600
    auth:
      auth_url: "{{ clouds.devstack.auth.auth_url }}"
      username: "{{ clouds.devstack.auth.username }}"
      password: "{{ clouds.devstack.auth.password }}"
      project_name: "{{ clouds.devstack.auth.project_name }}"
  loop: "{{ snapshot_volumes }}"
