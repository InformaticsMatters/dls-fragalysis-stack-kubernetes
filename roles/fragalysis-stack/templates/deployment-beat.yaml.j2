---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: redis
  namespace: {{ stack_namespace }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: redis
  template:
    metadata:
      labels:
        name: redis
    spec:
      serviceAccountName: stack

      # Pod Node Affinity.
      # Prefer 'core' before 'application'
      # then try anything other than 'worker before finally trying 'worker'
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 40
            preference:
              matchExpressions:
              - key: informaticsmatters.com/purpose-core
                operator: Exists
          - weight: 30
            preference:
              matchExpressions:
              - key: informaticsmatters.com/purpose-application
                operator: Exists
          - weight: 20
            preference:
              matchExpressions:
              - key: informaticsmatters.com/purpose-worker
                operator: DoesNotExist

{% if all_image_preset_pullsecret_name|string|length > 0 %}
      imagePullSecrets:
      - name: {{ all_image_preset_pullsecret_name }}
{% endif %}

      containers:
      - name: beat
        image: '{{ stack_image_registry }}/{{ stack_image }}:{{ stack_image_tag }}'
        imagePullPolicy: Always
        env:
        # This container's role is a (celery) beat scheduler...
        - name: CONTAINER_ROLE
          value: beat
        - name: CELERY_BROKER_URL
          value: redis://redis:6379/0
        - name: CELERY_RESULT_BACKEND
          value: redis://redis:6379/0
